"""
1. 문제설명
- 테트로미노를 이용해 올려놓았을 때 최대값 찾기
2. 아이디어
- 테트로미노는 총 19가지 
- 2중 포문에 19에 3
3. 시간복잡도
- O(n^2 * 19 * 3) 1억4천 ok..
"""
import sys
input = sys.stdin.readline
N, M = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(N)]

shapes = [
  ([1, 0], [1, 1], [2, 1]),
  ([0, 1], [-1, 1], [-1, 2]),
  ([0, 1], [1, 1], [1, 2]),
  ([-1, 0], [-1, 1], [-2, 1]),
  ([0, 1], [0, 2], [1, 1]),
  ([1, 0], [1, 1], [2, 0]),
  ([0, 1], [-1, 1], [0, 2]),
  ([0, 1], [1, 1], [-1, 1]),
  ([1, 0], [2, 0], [2, 1]),
  ([0, 1], [0, 2], [-1, 2]),
  ([0, 1], [1, 1], [2, 1]),
  ([1, 0], [0, 1], [0, 2]),
  ([0, 1], [-1, 1], [-2, 1]),
  ([1, 0], [1, 1], [1, 2]),
  ([0, 1], [1, 0], [2, 0]),
  ([0, 1], [0, 2], [1, 2]),
  ([0, 1], [0, 2], [0, 3]),
  ([1, 0], [2, 0], [3, 0]),
  ([0, 1], [1, 0], [1, 1])
]

MAX = 0

for shape in shapes:
  for y in range(N):
    for x in range(M):
      cnt = graph[y][x]
      for dy, dx in shape:
        ny = y + dy
        nx = x + dx
        if 0 <= ny < N and 0 <= nx < M:
          cnt += graph[ny][nx]
        else:
          break
      MAX = max(MAX, cnt)

print(MAX)